单一职责：一个类只负责一个领域类的相应职责，也就是说一个类负责一项功能
开闭原则：开发扩展，关闭修改
里氏替换：继承的时候子类除了新增功能外，尽量不要修改父类方法的预期行为
依赖倒置：抽象不应依赖于实现，实现依赖于抽象，也就是说要针对接口编程，不要针对实现编程
隔离原则：为各个类建立它们需要的专用接口，不要去建立一个庞大的接口供所有依赖它的类去调用
合成复用：尽量使用对象组合，不要使用继承来达到复用的目的
迪米特法则：最少知识原则，就是说一个对象应对对其他对象尽可能的少了解，也就是降低类之间的耦合，每个类尽量减少对其他类的依赖；是的系统功能模块能相互独立
相互之间尽量少存在依赖关系

单例模式，

工厂模式，简单工厂，工厂方法，抽象工厂
建造者，
模板模式，
装饰器模式，
代理模式 jdk动态代理，



与类适配器模式相比，要在适配器中置换适配者类的某些方法比较麻烦。如果一定要置换掉适配者类的一个或多个方法，可以先做一个适配者类的子类，将适配者类的方法置换掉，然后再把适配者类的子类当做真正的适配者进行适配，实现过程较为复杂