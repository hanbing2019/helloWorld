存储引擎它是我们存储数据的形式
执行引擎，它利用存储引擎提供的相应的 API 来让执行计划去操作存储引擎

常见存储引擎

myisam
应用范围比较小。表级锁定限制了读/写的性能，因此在 Web 和数据仓库配置中，
它通常用于只读或以读为主的工作。
特点：
支持表级别的锁（插入和更新会锁表）。不支持事务。
拥有较高的插入（insert）和查询（select）速度。
存储了表的行数（count 速度更快）。
（怎么快速向数据库插入 100 万条数据？我们有一种先用 MyISAM 插入数据，然后
修改存储引擎为 InnoDB 的操作。）
适合：只读之类的数据分析的项目


innodb
mysql 5.7 中的默认存储引擎。InnoDB 是一个事务安全（与 ACID 兼容）的 MySQL
存储引擎，它具有提交、回滚和崩溃恢复功能来保护用户数据。InnoDB 行级锁（不升级
为更粗粒度的锁）和 Oracle 风格的一致非锁读提高了多用户并发性和性能。InnoDB 将
用户数据存储在聚集索引中，以减少基于主键的常见查询的 I/O。为了保持数据完整性，
InnoDB 还支持外键引用完整性约束。
特点：
支持事务，支持外键，因此数据的完整性、一致性更高。
支持行级别的锁和表级别的锁。
支持读写并发，写不阻塞读（MVCC）。
特殊的索引存放方式，可以减少 IO，提升查询效率。
适合：经常更新的表，存在并发读写或者有事务处理的业务系统




Memory
Memory（1 个文件）
将所有数据存储在 RAM 中，以便在需要快速查找非关键数据的环境中快速访问。这
个引擎以前被称为堆引擎。其使用案例正在减少；InnoDB 及其缓冲池内存区域提供了一
种通用、持久的方法来将大部分或所有数据保存在内存中，而 ndbcluster 为大型分布式
数据集提供了快速的键值查找。
特点：
把数据放在内存里面，读写的速度很快，但是数据库重启或者崩溃，数据会全部消
失。只适合做临时表。
将表中的数据存储到内存中。



CSV


选择存储引擎
如果对数据一致性要求比较高，需要事务支持，可以选择 InnoDB。
如果数据查询多更新少，对查询性能要求比较高，可以选择 MyISAM。
如果需要一个用于查询的临时表，可以选择 Memory。

