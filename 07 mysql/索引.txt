什么是索引
数据库一种用于快速查找的数据结构

索引采用了那些数据结构
B+tree，hash

InnoDB存储引擎使用的是B+tree的结构作为索引的数据结构，为什么
B+Tree的结构

1、它的非叶子节点关键字的数量是跟路数相等的；
2、B+Tree 的非叶子都不会存储数据，只有叶子节点才存储数据。搜索
到关键字不会直接返回，会到最后一层的叶子节点；减少索引结构的层数，减少磁盘io的次数
3、B+Tree 的每个叶子节点增加了一个指向相邻叶子节点的指针，它的最后一个数
据会指向下一个叶子节点的第一个数据，形成了一个有序链表的结构。


哈希索引和B+tree索引的对比

什么是聚簇索引、覆盖索引

聚簇索引：叶子节点存放的是数据行

非聚簇索引：存放的是主键值




联合索引，最左前缀匹配
（选择索引字段通常选择离散度高的索引）


事务，隔离级别，不同的隔离级别存在的问题


多版本并行控制

事务4大特性。原子性，持久性，隔离性是怎么实现的
原子性，利用undolog回滚
持久性，利用redolog保证在宕机后恢复内存中的数据，使用double writer buffer
隔离性，利用锁和mvcc


优化数据库的维度
让查询更快
1.优化sql
2.从业务的角度来优化
2.分库分表

连接数不够用时，可以扩大连接数

硬件，操作系统
数据库参数配置
架构的优化（可以引入缓存）
数据库集群（面临的问题数据一致性问题）


回表查询
通过非聚集索引找到主键，然后通过主键在聚集索引中找到对应的数据，要经过2次索引返回结果
性能就收到影响，
可以使用覆盖索引来提升查询效率，将查询返回的字段定义为索引












